{"version":3,"sources":["scripts/main.js"],"names":["messagesContainer","document","createElement","waitFor","element","eventName","Promise","resolve","addEventListener","nodeName","id","classList","add","body","appendChild","printMessage","message","insertAdjacentHTML","module","exports"],"mappings":";AAAA,aAEA,IAAMA,EAAoBC,SAASC,cAAc,OAKjD,SAASC,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAAAC,GACjBH,EAAQI,iBAAiBH,EAAW,WAClCE,EACWF,oBAAAA,OAAAA,EACSD,8BAAAA,OAAAA,EAAQK,SACpBL,mBAAAA,OAAAA,EAAQM,GAHhB,iBANNV,EAAkBW,UAAUC,IAAI,sBAChCX,SAASY,KAAKC,YAAYd,GAc1B,IAAMe,EAAe,SAACC,GACpBhB,EAAkBiB,mBAAmB,YACZD,8BAAAA,OAAAA,EADzB,gBAKFE,OAAOC,QAAU,CACfhB,QAAAA,EACAY,aAAAA","file":"main.e0e1c324.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst messagesContainer = document.createElement('div');\n\nmessagesContainer.classList.add('messages-container');\ndocument.body.appendChild(messagesContainer);\n\nfunction waitFor(element, eventName) {\n  return new Promise(resolve => {\n    element.addEventListener(eventName, () => {\n      resolve(`\n        It was ${eventName}\n        on the element: ${element.nodeName},\n        id: ${element.id}\n      `);\n    });\n  });\n}\n\nconst printMessage = (message) => {\n  messagesContainer.insertAdjacentHTML('beforeend', `\n    <div class=\"message\">${message}</div>\n  `);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}